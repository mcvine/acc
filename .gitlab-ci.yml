.build-job-using-shell:
  tags:
    - shell
  stage: build
  script:
    - echo "GITLAB_USER_LOGIN=$GITLAB_USER_LOGIN HOME=$HOME PATH=$PATH"
    - nvidia-smi
    - export PATH=/opt/miniconda3/bin:$PATH
    - conda config --add channels conda-forge
    - conda config --add channels diffpy
    - conda config --add channels mcvine
    - conda config --show channels
    - conda remove --name testenv --all
    - conda create -n testenv python=3.8 mcvine mcvine-core=1.4.6 numba=0.53.1 pyyaml=5.3
    - conda install -n testenv cupy cudatoolkit=11.3
    - conda run -n testenv python setup.py sdist
    - conda run -n testenv pip install --no-deps .
    - conda run -n testenv python tests/geometry/test_onbox.py

build-conda-env:
  tags:
    - docker
  image: $CI_REGISTRY/mcvine/acc:latest
  cache:
    when: on_success
    paths:
      - .conda_envs/
  stage: build
  script:
    - |
      if [[ -d $CI_PROJECT_DIR/.conda_envs/acc/ ]]; then
        exit 10
      fi
    - export LANG=C.UTF-8  LC_ALL=C.UTF-8  PATH=/opt/conda/bin:$PATH
    - export PATH=/opt/conda/bin:$PATH
    - conda config --add envs_dirs $CI_PROJECT_DIR/.conda_envs/
    - mamba env list
    - mamba env create -f environment.yml
  allow_failure:
    exit_codes: 10

build-job-using-docker:
  tags:
    - docker
  image: $CI_REGISTRY/mcvine/acc:latest
  cache:
    paths:
      - .conda_envs/
    policy: pull
  stage: test
  script:
    - echo "GITLAB_USER_LOGIN=$GITLAB_USER_LOGIN HOME=$HOME PATH=$PATH"
    - nvidia-smi
    - export LANG=C.UTF-8  LC_ALL=C.UTF-8  PATH=/opt/conda/bin:$PATH
    - export PATH=/opt/conda/bin:$PATH
    - conda config --add envs_dirs $CI_PROJECT_DIR/.conda_envs/
    - mamba env list
    - mamba list -n acc mcvine # check mcvine
    - git clone https://github.com/yxqd/dotmantid ~/.mantid
    - mamba run -n acc mcvine
    - mamba run -n acc python .github/workflows/patch_numba.py # patch numba for const-array fix
    - mamba run -n acc python setup.py sdist
    - mamba run -n acc pip install --no-deps .
    - cd tests
    - mamba run -n acc py.test
